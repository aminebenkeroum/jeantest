[{"/Users/amineb/Work/jean_test_front/src/pages/invoices/InvoiceForm/index.js":"1","/Users/amineb/Work/jean_test_front/src/pages/invoices/InvoiceNew/index.js":"2","/Users/amineb/Work/jean_test_front/src/services/api.js":"3","/Users/amineb/Work/jean_test_front/src/pages/invoices/invoicesList/index.js":"4","/Users/amineb/Work/jean_test_front/src/pages/invoices/components/CustomerSelect.js":"5","/Users/amineb/Work/jean_test_front/src/App.js":"6","/Users/amineb/Work/jean_test_front/src/pages/invoices/InvoiceEdit/index.js":"7","/Users/amineb/Work/jean_test_front/src/pages/invoices/components/InvoiceLines.js":"8","/Users/amineb/Work/jean_test_front/src/components/Header.js":"9","/Users/amineb/Work/jean_test_front/src/index.js":"10","/Users/amineb/Work/jean_test_front/src/services/http.js":"11","/Users/amineb/Work/jean_test_front/src/pages/invoices/components/ProductSelect.js":"12","/Users/amineb/Work/jean_test_front/src/pages/invoices/components/EditableCell.js":"13","/Users/amineb/Work/jean_test_front/src/pages/customers/customersList/index.js":"14","/Users/amineb/Work/jean_test_front/src/components/CustomSelect.js":"15","/Users/amineb/Work/jean_test_front/src/pages/invoices/index.js":"16","/Users/amineb/Work/jean_test_front/src/reportWebVitals.js":"17","/Users/amineb/Work/jean_test_front/src/pages/products/productsList/index.js":"18","/Users/amineb/Work/jean_test_front/src/pages/invoices/InvoicesList/index.js":"19"},{"size":6513,"mtime":1610839241901,"results":"20","hashOfConfig":"21"},{"size":678,"mtime":1610966348971,"results":"22","hashOfConfig":"21"},{"size":2168,"mtime":1610968110383,"results":"23","hashOfConfig":"21"},{"size":4866,"mtime":1610839392190,"results":"24","hashOfConfig":"21"},{"size":1043,"mtime":1610839793106,"results":"25","hashOfConfig":"21"},{"size":998,"mtime":1610965648582,"results":"26","hashOfConfig":"21"},{"size":844,"mtime":1610839888502,"results":"27","hashOfConfig":"21"},{"size":5093,"mtime":1610966001653,"results":"28","hashOfConfig":"21"},{"size":1381,"mtime":1610839435423,"results":"29","hashOfConfig":"21"},{"size":548,"mtime":1610828018194,"results":"30","hashOfConfig":"21"},{"size":255,"mtime":1610643543031,"results":"31","hashOfConfig":"21"},{"size":985,"mtime":1610839877923,"results":"32","hashOfConfig":"21"},{"size":808,"mtime":1610832462982,"results":"33","hashOfConfig":"21"},{"size":3845,"mtime":1610968353900,"results":"34","hashOfConfig":"21"},{"size":390,"mtime":1610839711843,"results":"35","hashOfConfig":"21"},{"size":176,"mtime":1610965192492,"results":"36","hashOfConfig":"21"},{"size":362,"mtime":1610643123643,"results":"37","hashOfConfig":"21"},{"size":3048,"mtime":1610724436020,"results":"38","hashOfConfig":"21"},{"size":5284,"mtime":1610968708739,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1nzvqex",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/amineb/Work/jean_test_front/src/pages/invoices/InvoiceForm/index.js",["83"],"import { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useState } from \"react\";\nimport { Form, Col, Button, FormControl } from \"react-bootstrap\";\nimport InvoiceLines from \"../components/InvoiceLines\";\nimport CustomerSelect from \"../components/CustomerSelect\";\n\nconst validationSchema = yup.object({\n  customer_id: yup.string().required(\"Customer is required\"),\n  date: yup.date().required(\"Invoicing date is required\"),\n  deadline: yup.date().required(\"Deadline date is required\"),\n  paid: yup.boolean().default(false),\n  finalized: yup.boolean().default(false),\n});\n\nconst unitOptions = [\n  { label: \"Hour\", value: \"hour\" },\n  { label: \"Piece\", value: \"piece\" },\n  { value: \"day\", label: \"Day\" },\n];\n\nconst vatRateOptions = [\n  { value: \"0\", label: \"0\" },\n  { value: \"5.5\", label: \"5.5\" },\n  { value: \"10\", label: \"10\" },\n  { value: \"20\", label: \"20\" },\n];\n\nconst InvoiceForm = (props) => {\n  const { isNew, title, onSubmit, initialValues } = props;\n\n  const [invoiceLines, setInvoiceLines] = useState(\n    initialValues && initialValues.invoice_lines\n  );\n\n  const finalizedInvoice = initialValues && initialValues.finalized;\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        if (isNew) {\n          onSubmit(values);\n        } else {\n          onSubmit({ ...values, invoice_lines_attributes: invoiceLines });\n        }\n      }}\n      validationSchema={validationSchema}\n    >\n      {({ handleSubmit, handleChange, values, touched, errors }) => {\n        return (\n          <Form style={{ padding: 20 }} onSubmit={handleSubmit}>\n            <h2>{title}</h2>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Select a customer :</Form.Label>\n                <CustomerSelect\n                  onChange={handleChange}\n                  value={values.customer_id}\n                  disabled={finalizedInvoice}\n                />\n                {touched.customer_id && errors.customer_id && (\n                  <span className=\"error-message\" id=\"customer_id\">\n                    {errors.customer_id}\n                  </span>\n                )}\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Invoicing Date :</Form.Label>\n                <Form.Control\n                  id=\"date\"\n                  name=\"date\"\n                  label=\"Invoicing Date\"\n                  type=\"date\"\n                  value={values.date}\n                  disabled={finalizedInvoice}\n                  onChange={handleChange}\n                />\n                {touched.date && errors.date && (\n                  <span className=\"error-message\" id=\"date\">\n                    {errors.date}\n                  </span>\n                )}\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Deadline Date :</Form.Label>\n                <Form.Control\n                  id=\"deadline\"\n                  name=\"deadline\"\n                  label=\"Deadline Date\"\n                  type=\"date\"\n                  value={values.deadline}\n                  disabled={finalizedInvoice}\n                  onChange={handleChange}\n                />\n                {touched.deadline && errors.deadline && (\n                  <span className=\"error-message\" id=\"deadline\">\n                    {errors.deadline}\n                  </span>\n                )}\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Paid :</Form.Label>\n                <Form.Check\n                  id=\"paid\"\n                  name=\"paid\"\n                  label=\"Paid invoice\"\n                  type=\"checkbox\"\n                  checked={values.paid}\n                  value={values.paid}\n                  onChange={handleChange}\n                />\n                {touched.paid && errors.paid && (\n                  <span className=\"error-message\" id=\"paid\">\n                    {errors.paid}\n                  </span>\n                )}\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Finalize the invoice :</Form.Label>\n                <Form.Check\n                  id=\"finalized\"\n                  name=\"finalized\"\n                  label=\"Finalized invoice\"\n                  type=\"checkbox\"\n                  checked={values.finalized}\n                  value={values.finalized}\n                  onChange={handleChange}\n                  disabled={finalizedInvoice}\n                />\n                {touched.finalized && errors.finalized && (\n                  <span className=\"error-message\" id=\"finalized\">\n                    {errors.finalized}\n                  </span>\n                )}\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Tax :</Form.Label>\n                <Form.Control\n                  id=\"tax\"\n                  name=\"tax\"\n                  type=\"text\"\n                  value={values.tax}\n                  readOnly\n                />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Total :</Form.Label>\n                <Form.Control\n                  id=\"total\"\n                  name=\"total\"\n                  type=\"text\"\n                  value={values.total}\n                  readOnly\n                />\n              </Form.Group>\n            </Form.Row>\n            {!isNew && (\n              <InvoiceLines\n                vatRateOptions={vatRateOptions}\n                unitOptions={unitOptions}\n                onAdd={() =>\n                  setInvoiceLines(\n                    invoiceLines.concat({\n                      product_id: null,\n                      price: 0,\n                      quantity: 0,\n                      unit: unitOptions[0].value,\n                      vat_rate: vatRateOptions[0].value,\n                      _destroy: false,\n                    })\n                  )\n                }\n                disable={finalizedInvoice}\n                onUpdate={(newLines) => setInvoiceLines(newLines)}\n                data={invoiceLines}\n                invoiceId={null}\n              />\n            )}\n            <Button variant=\"primary\" type=\"submit\">\n              {isNew ? \"Create\" : \"Update\"}\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default InvoiceForm;\n",["84","85"],"/Users/amineb/Work/jean_test_front/src/pages/invoices/InvoiceNew/index.js",[],"/Users/amineb/Work/jean_test_front/src/services/api.js",[],"/Users/amineb/Work/jean_test_front/src/pages/invoices/invoicesList/index.js",["86"],"import React, { useEffect, useState } from \"react\";\nimport { debounce } from \"lodash\";\nimport { useTable } from \"react-table\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Table, Pagination, Form, Button, Badge, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { invoices as getInvoices } from \"../../../services/api\";\nimport CustomerSelect from \"../components/CustomerSelect\";\n\nconst InvoicesList = ({ history }) => {\n  const [invoices, setInvoices] = useState([]);\n\n  const [query, setQuery] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    page_size: 0,\n    total_entries: 0,\n    total_pages: 0,\n  });\n\n  const getInvoicesQuery = (query, page = 1) =>\n    getInvoices(query, page).then((response) => {\n      if (response && response.invoices) {\n        setInvoices(response.invoices);\n        setPagination(response.pagination);\n      }\n    });\n\n  useEffect(() => {\n    getInvoicesQuery(\"\");\n  }, []);\n\n  let items = [];\n  for (let number = 1; number <= pagination.total_pages; number++) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === pagination.page}\n        onClick={() => getInvoicesQuery(query, number)}\n      >\n        {number}\n      </Pagination.Item>\n    );\n  }\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"Customer\",\n        accessor: \"customer_id\",\n        Cell: ({ value: initialValue }) => {\n          return <CustomerSelect size=\"sm\" value={initialValue} readOnly />;\n        },\n      },\n      {\n        Header: \"Paid\",\n        accessor: \"paid\",\n        Cell: ({ value: initialValue }) => {\n          return (\n            <Badge variant={initialValue ? \"success\" : \"danger\"}>\n              {initialValue ? \"Paid\" : \"Not yet\"}\n            </Badge>\n          );\n        },\n      },\n      {\n        Header: \"Date of invoice\",\n        accessor: \"date\",\n      },\n      {\n        Header: \"Deadline\",\n        accessor: \"deadline\",\n      },\n      {\n        Header: \"Tax\",\n        accessor: \"tax\",\n      },\n      {\n        Header: \"Total\",\n        accessor: \"total\",\n      },\n      {\n        Header: \"Actions\",\n        accessor: \"\",\n        Cell: ({ value: initialValue, row: { original } }) => {\n          return (\n            <Button\n              size=\"sm\"\n              onClick={() =>\n                history.push(`invoices/${original.id}`, { invoice: original })\n              }\n            >\n              <FontAwesomeIcon\n                style={{ marginRight: 10 }}\n                icon={faEdit}\n                size={10}\n                color=\"white\"\n              />\n              Start invoicing\n            </Button>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data: invoices });\n\n  const renderTable = () => (\n    <Table {...getTableProps()} size=\"sm\">\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h3 style={{ marginBottom: 20 }}>List of invoices</h3>\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>Search an invoice</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Any query on invoice (Customer name for example)\"\n              onChange={debounce((e) => {\n                setQuery(e.target.value);\n                getInvoicesQuery(e.target.value);\n              }, 200)}\n            />\n          </Form.Group>\n        </Form.Row>\n      </Form>\n      <Button\n        onClick={() => history.push(\"/invoices/create\")}\n        variant=\"primary\"\n        size=\"sm\"\n        style={{ float: \"right\", marginBottom: 20 }}\n      >\n        <FontAwesomeIcon\n          style={{ marginRight: 10 }}\n          icon={faPlus}\n          size={10}\n          color=\"white\"\n        />\n        Create a new invoice\n      </Button>\n      {renderTable()}\n      <Pagination style={{ marginTop: 20 }}>{items}</Pagination>\n    </div>\n  );\n};\n\nexport default withRouter(InvoicesList);\n",["87","88"],"/Users/amineb/Work/jean_test_front/src/pages/invoices/components/CustomerSelect.js",["89"],"/Users/amineb/Work/jean_test_front/src/App.js",[],"/Users/amineb/Work/jean_test_front/src/pages/invoices/InvoiceEdit/index.js",[],"/Users/amineb/Work/jean_test_front/src/pages/invoices/components/InvoiceLines.js",["90","91","92","93"],"/Users/amineb/Work/jean_test_front/src/components/Header.js",[],"/Users/amineb/Work/jean_test_front/src/index.js",[],"/Users/amineb/Work/jean_test_front/src/services/http.js",[],"/Users/amineb/Work/jean_test_front/src/pages/invoices/components/ProductSelect.js",["94"],"import React, { useEffect, useState } from \"react\";\nimport CustomSelect from \"../../../components/CustomSelect\";\nimport { products as getProducts } from \"../../../services/api\";\n\nconst ProductSelect = (props) => {\n  const { value, onChange } = props;\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    // get products list\n    getProducts({ query: \"\", per_page: 200 }).then((response) => {\n      if (response && response.products) {\n        const finalOptions = response.products.map((product) => ({\n          label: product.label,\n          value: product.id,\n          product,\n        }));\n        setOptions(finalOptions);\n      }\n    });\n  }, []);\n\n  return (\n    <CustomSelect\n      as=\"select\"\n      value={value}\n      options={options}\n      onChange={(e) => {\n        const option = options.find((option) => option.value == e.target.value);\n        onChange(e.target.value, option && option.product);\n      }}\n    />\n  );\n};\n\nexport default ProductSelect;\n","/Users/amineb/Work/jean_test_front/src/pages/invoices/components/EditableCell.js",[],"/Users/amineb/Work/jean_test_front/src/pages/customers/customersList/index.js",["95"],"/Users/amineb/Work/jean_test_front/src/components/CustomSelect.js",[],"/Users/amineb/Work/jean_test_front/src/pages/invoices/index.js",[],"/Users/amineb/Work/jean_test_front/src/reportWebVitals.js",[],"/Users/amineb/Work/jean_test_front/src/pages/products/productsList/index.js",[],"/Users/amineb/Work/jean_test_front/src/pages/invoices/InvoicesList/index.js",["96","97"],{"ruleId":"98","severity":1,"message":"99","line":4,"column":29,"nodeType":"100","messageId":"101","endLine":4,"endColumn":40},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":112,"column":5,"nodeType":"108","endLine":112,"endColumn":7,"suggestions":"109"},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},{"ruleId":"98","severity":1,"message":"112","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"113","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"114","line":1,"column":28,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"112","line":3,"column":17,"nodeType":"100","messageId":"101","endLine":3,"endColumn":21},{"ruleId":"106","severity":1,"message":"115","line":146,"column":5,"nodeType":"108","endLine":146,"endColumn":7,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":28,"column":62,"nodeType":"119","messageId":"120","endLine":28,"endColumn":64},{"ruleId":"106","severity":1,"message":"107","line":91,"column":5,"nodeType":"108","endLine":91,"endColumn":7,"suggestions":"121"},{"ruleId":"106","severity":1,"message":"122","line":45,"column":6,"nodeType":"108","endLine":45,"endColumn":8,"suggestions":"123"},{"ruleId":"106","severity":1,"message":"107","line":123,"column":5,"nodeType":"108","endLine":123,"endColumn":7,"suggestions":"124"},"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["127"],["125"],["126"],"'Form' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook React.useMemo has missing dependencies: 'data', 'disable', 'onUpdate', 'unitOptions', and 'vatRateOptions'. Either include them or remove the dependency array.",["128"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["129"],"React Hook useEffect has a missing dependency: 'customerName'. Either include it or remove the dependency array.",["130"],["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"132","fix":"136"},{"desc":"137","fix":"138"},{"desc":"132","fix":"139"},"Update the dependencies array to be: [history]",{"range":"140","text":"141"},"Update the dependencies array to be: [data, disable, onUpdate, unitOptions, vatRateOptions]",{"range":"142","text":"143"},{"range":"144","text":"141"},"Update the dependencies array to be: [customerName]",{"range":"145","text":"146"},{"range":"147","text":"141"},[2876,2878],"[history]",[3664,3666],"[data, disable, onUpdate, unitOptions, vatRateOptions]",[2309,2311],[1421,1423],"[customerName]",[3230,3232]]